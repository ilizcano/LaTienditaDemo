@using LaTiendita.Models
@using LaTiendita.Model
@model PurchaseModel

@{
    ViewBag.Title = "Comprar";
    var products = (List<Product>)ViewBag.Products;
}
    <div id="purchaseModule">
        <h2>@ViewBag.Title</h2>
        <h3>@ViewBag.Message</h3>

        @using (Ajax.BeginForm("Index", "Comprar",null, new AjaxOptions { HttpMethod = "POST", UpdateTargetId = "purchaseModule" }, new { @id = "compraForm" }))
        {
            <div class="row">
                @Html.ValidationSummary(false, "", new { @class = "text-danger" })
            </div>
            <div class="row">
                <div class="col-md-2">

                    @Html.LabelFor(model => model.ProductId)
                </div>
                <div class="col-md-2">
                    @Html.DropDownListFor(model => model.ProductId, (from p in products
                                                                        orderby p.Name
                                                                        select new SelectListItem
                                                                        {
                                                                            Text = string.Format("{0} - ${1:0.##}", p.Name, p.Price),
                                                                            Value = p.ProductId.ToString()
                                                                        }), "-- SELECT PRODUCT --")
                </div>
            </div>
            <br />
            <div class="row">
                <div class="col-md-2">
                    @Html.LabelFor(model => model.Quantity)
                </div>

                <div class="col-md-2">
                    @Html.TextBoxFor(model => model.Quantity, new { @type = "number", @Value = "1" })
                </div>
            </div>
            <br />
            <div class="row">
                <div class="col-md-2">
                    @Html.LabelFor(model => model.Price)
                </div>

                <div class="col-md-2">
                    @Html.TextBoxFor(model => model.Price, new { @readonly = true })
                </div>
            </div>
            <br />
            <div class="row">
                <div class="col-md-2">
                    @Html.LabelFor(model => model.Total)
                </div>

                <div class="col-md-2">
                    @Html.TextBoxFor(model => model.Total, new { @readonly = true })
                </div>
            </div>
            <br />
            <div class="row">
                <div class="col-lx-1">
                    <input id="submitFormCompra" class="btn btn-primary" type="submit" value="Comprar" />
                    <input id="resetFormCompra" class="btn btn-warning" type="button" value="Cancelar" />
                </div>
            </div>
        }
    </div>
    <div id="successDialog" title="Success" style="display:none;">Purchase completed, your balance has been updated.</div>
@section Scripts {
    @Scripts.Render("~/bundles/unobtrusive")
}

<script type="text/javascript">
$(function() {

    var productsAvailable = @Html.Raw(Json.Encode(products));

    @if (Model.IsValid && !Model.IsNew) { 
        @: $("#successDialog").dialog();
    }
    resetFormCompra();

    $("#ProductId").change(function () {
        let selectedProduct = productsAvailable.find(p => p.ProductId == $("#ProductId").val());

        if (typeof selectedProduct !== 'undefined') {
            $('#Quantity').val(1);
            $('#Price').val(selectedProduct.Price);
            $('#Total').val(+selectedProduct.Price);
        } else {
            $('#Quantity').val(1);
            $('#Price').val('');
            $('#Total').val('');
        }
    });

    function resetFormCompra() {
        $("#ProductId").val('');

        $('#Quantity').val(1);
        $('#Price').val('');
        $('#Total').val('');
        
    }

    $("#resetFormCompra").click(function () {
        resetFormCompra();
    });

    $("#Quantity").change(function () {
        let price = $('#Price').val();
        let quantity = $("#Quantity").val();
        $('#Total').val(+quantity * price);
    });

});

</script>
