@using LaTiendita.Models
@model PaymentModel


@{
    ViewBag.Title = "Pagar";
}

<div id="paymentModule">
    <h2>@ViewBag.Title</h2>
    <h3>@ViewBag.Message</h3>

    @using (Ajax.BeginForm("Index", "Pago", null, new AjaxOptions { HttpMethod = "POST", UpdateTargetId = "paymentModule" }, new { @id = "pagoForm" }))
    {
        <div class="row">
            <div class="col-md-2">
                @Html.LabelFor(model => model.Balance)
            </div>

            <div class="col-md-2">
                @Html.TextBoxFor(model => model.Balance, new { @readonly = true, @Value = Model.Balance < 0 ? (Model.Balance * -1).ToString("0.00") : Model.Balance.ToString("0.00"), @style = Model.Balance < 0 ? "color:green;" : "" })
            </div>
        </div>
        <br />
        <div class="row">
            <div class="col-md-2">
                @Html.LabelFor(model => model.Amount)
            </div>

            <div class="col-md-2">
                @Html.TextBoxFor(model => model.Amount,"{0:n2}", new { @required = "required"})
            </div>
        </div>
        <br />
        <div class="row">
            <div class="col-md-2">
                @Html.LabelFor(model => model.NewBalance)
            </div>

            <div class="col-md-2">
                @Html.TextBoxFor(model => model.NewBalance, new { @readonly = true, @Value = Model.Balance < 0 ? (Model.Balance * -1).ToString("0.00") : Model.Balance.ToString("0.00"), @style = Model.Balance < 0 ? "color:green;" : "" })
            </div>
        </div>
        <br />
        <div class="row">
            <div class="col-lx-1">
                <input id="submitFormPagar" class="btn btn-primary" type="submit" value="Pagar" disabled />
                <input id="resetFormPagar" class="btn btn-warning" type="button" value="Cancelar" />
            </div>
        </div>
    }
</div>

@section Scripts {
    @Scripts.Render("~/bundles/unobtrusive")
}

<script type="text/javascript">
$(function() {
    $("#Amount").change(function () {
        let balance = $("#Balance").val();
        let amount = parseFloat($("#Amount").val().replace(/[^0-9.]/g, ''));
        var cleanAmount = amount.toFixed(2);
        $(this).val(cleanAmount);

        if (cleanAmount && balance) {
            let isPositiveBalance = $("#Balance").css('color') === "rgb(0, 128, 0)";
            balance = isPositiveBalance ? balance * -1 : balance;
            let newBalance = (balance - cleanAmount);
            if (newBalance >= 0) {
                $('#NewBalance').val(newBalance);
                $('#NewBalance').css("color", "black");
            } else {
                $('#NewBalance').val(newBalance * -1);
                $('#NewBalance').css("color", "green");
            }
            
        }

        if (cleanAmount && cleanAmount > 0) {
            $('#submitFormPagar').prop('disabled', false);
        } else {
            $('#submitFormPagar').prop('disabled', true);
        }
    });

    function resetFormPagar() {
        window.location.href = '../';
    }

    $("#resetFormPagar").click(function () {
        resetFormPagar();
    });

});

</script>